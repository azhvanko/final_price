user                 nginx;
worker_processes     auto;
worker_rlimit_nofile 65536;
pid                  /var/run/nginx.pid;

events {
    worker_connections 8192;
    multi_accept       on;
    use                epoll;
}

http {
    log_format main escape=json '{'
        '"time_local":"$time_local",'
        '"remote_addr":"$remote_addr",'
        '"host":"$host",'
        '"request_method":"$request_method",'
        '"request_uri":"$request_uri",'
        '"server_protocol":"$server_protocol",'
        '"status":$status,'
        '"body_bytes_sent":$body_bytes_sent,'
        '"http_referrer":"$http_referer",'
        '"http_user_agent":"$http_user_agent",'
        '"request_time":$request_time,'
        '"upstream_response_time":$upstream_response_time,'
        '"upstream_status":"$upstream_status",'
        '"upstream_addr":"$upstream_addr",'
        '"scheme":"$scheme"'
    '}';

    charset utf-8;
    charset_types
        text/css
        text/plain
        text/xml
        application/json
        application/javascript
        application/rss+xml
        application/xml;

    include                       /etc/nginx/mime.types;
    default_type                  application/octet-stream;
    server_tokens                 off;
    sendfile                      on;
    tcp_nopush                    on;
    tcp_nodelay                   on;
    types_hash_max_size           2048;
    server_names_hash_bucket_size 64;
    merge_slashes                 on;
    keepalive_timeout             60;
    keepalive_requests            1024;
    reset_timedout_connection     on;

    client_body_temp_path /var/cache/nginx/client_temp 1 2;
    proxy_temp_path       /var/cache/nginx/proxy_temp 1 2;
    fastcgi_temp_path     /var/cache/nginx/fastcgi_temp 1 2;
    uwsgi_temp_path       /var/cache/nginx/uwsgi_temp 1 2;
    scgi_temp_path        /var/cache/nginx/scgi_temp 1 2;

    access_log /var/log/nginx/access.log main buffer=64k flush=1m;
    error_log  /var/log/nginx/error.log warn;

    map $http_origin $cors_origin {
        default                          "";
        ~^https?://(www\.)?example\.com$ $http_origin;
    }

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
